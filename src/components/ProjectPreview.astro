---
interface Props {
  title: string;
  description: string;
  image: string;
  link: string;
  tags: string[];
}
const { title, description, image, link, tags } = Astro.props;
---
<a href={link} class="glass-card overflow-hidden group transition-all duration-300 hover:scale-[1.02] block">
  <div class="h-36 sm:h-48 overflow-hidden relative">
    <div class="absolute inset-0 bg-gradient-to-t from-cyber-dark to-transparent z-10"></div>
    <!-- Placeholder image for now -->
    <div class="w-full h-full bg-gradient-to-br from-cyber-dark to-cyber-black flex items-center justify-center">
      <div class="font-cyber text-4xl sm:text-5xl text-cyber-blue/20">{title.charAt(0)}</div>
    </div>
  </div>
  <div class="p-4 sm:p-6">
    <h3 class="font-cyber text-xl sm:text-2xl text-cyber-pink mb-2 group-hover:text-cyber-blue transition-colors duration-300">
      {title}
    </h3>
    <p class="text-sm sm:text-base text-gray-300 mb-3 sm:mb-4">{description}</p>
    <div class="flex flex-wrap gap-1 sm:gap-2">
      {tags.map(tag => (
        <span class="px-2 py-1 text-xs bg-cyber-purple/20 text-cyber-purple rounded-full">
          {tag}
        </span>
      ))}
    </div>
  </div>
</a>

<style>
  .glass-card {
    background: rgba(19, 19, 32, 0.6);
    backdrop-filter: blur(8px);
    border: 1px solid rgba(5, 217, 232, 0.2);
    border-radius: 0.5rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
  }
  
  .glass-card:hover {
    border-color: rgba(255, 42, 109, 0.4);
    box-shadow: 0 8px 15px rgba(0, 0, 0, 0.2), 0 0 10px rgba(5, 217, 232, 0.2);
  }
</style>
